import RPi.GPIO as GPIO
import time

# Use GPIO.BCM mode for pin numbering
GPIO.setmode(GPIO.BCM)

# Define the GPIO pins for the trigger and echo signals
TRIG = 23  # Use the pin numbers based on your setup
ECHO = 24  # Use the pin numbers based on your setup

# Set up the GPIO channels - one output, one input
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)

# Ensure the trigger pin is low initially
GPIO.output(TRIG, False)
print("Waiting for the sensor to settle")
time.sleep(2)  # Waiting 2 seconds for the sensor to settle

def distance():
    # Trigger the ultrasonic burst
    GPIO.output(TRIG, True)
    time.sleep(0.00001)  # Pulse for 10 microseconds
    GPIO.output(TRIG, False)

    # Initialize start and stop times
    start_time = time.time()
    stop_time = start_time

    # Measure the start time
    while GPIO.input(ECHO) == 0:
        start_time = time.time()

    # Measure the arrival time of the echo
    while GPIO.input(ECHO) == 1:
        stop_time = time.time()

    # Calculate the duration of the echo to return
    duration = stop_time - start_time

    # Speed of sound at sea level = 343 m/s or 34300 cm/s
    # Distance = Speed x Time, but we need to divide by 2 because of the round trip
    distance = duration * 34300 / 2

    return distance

try:
    while True:
        dist = distance()
        print(f"Measured Distance = {dist:.2f} cm")
        time.sleep(1)  # Repeat the measurement every second

# Reset by pressing CTRL + C
except KeyboardInterrupt:
    print("Measurement stopped by the user")
    GPIO.cleanup()  # Clean up GPIO to ensure a clean exit
